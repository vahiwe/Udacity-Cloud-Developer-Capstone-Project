worker_processes 3;

user nobody nogroup;
error_log  /var/log/nginx/error.log warn;

events {
worker_connections 1024; # increase if you have lots of clients
}

http {
include mime.types;
# fallback in case we can't determine a type
default_type application/octet-stream;
access_log /var/log/nginx/access.log combined;
sendfile on;
proxy_connect_timeout   50000;
proxy_send_timeout      50000;
proxy_read_timeout      50000;
fastcgi_connect_timeout 50000;
fastcgi_send_timeout 50000;
fastcgi_read_timeout 50000;

upstream app_server {
# for a TCP configuration
server 127.0.0.1:8000;
}


server {
server_name pythonasalifestyle.ml;
# set the correct host(s) for your site
location / {
  try_files $uri @proxy_to_app;
}

location /favicon.ico { access_log off; log_not_found off; }

location /static/ {
    root /home/obiohakelvin96/TwitterAnalysis;
}

location /templates/ {
    root /home/obiohakelvin96/TwitterAnalysis;
}

location @proxy_to_app {
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;
  # we don't want nginx trying to do something clever with
  # redirects, we set the Host: header above already.
  proxy_pass http://app_server;
}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/pythonasalifestyle.ml/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pythonasalifestyle.ml/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



server {
    if ($host = pythonasalifestyle.ml) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


listen 80;
server_name pythonasalifestyle.ml;
    return 404; # managed by Certbot


}}
